const { User, Setor } = require('../models');

async function assignSetoresToUsers() {
    try {
        console.log('üß™ Atribuindo setores aos usu√°rios...\n');
        
        // 1. Buscar todos os usu√°rios
        console.log('1Ô∏è‚É£ Buscando todos os usu√°rios...');
        const users = await User.findAll({
            include: [{
                model: Setor,
                as: 'setores',
                attributes: ['id', 'nome'],
                through: { attributes: [] }
            }]
        });
        
        console.log(`   ‚úÖ Usu√°rios encontrados: ${users.length}`);
        
        // 2. Buscar setores dispon√≠veis
        console.log('\n2Ô∏è‚É£ Buscando setores dispon√≠veis...');
        const setores = await Setor.findAll();
        console.log(`   ‚úÖ Setores dispon√≠veis: ${setores.length}`);
        setores.forEach(setor => {
            console.log(`      - ${setor.nome} (ID: ${setor.id})`);
        });
        
        if (setores.length === 0) {
            console.log('   ‚ùå Nenhum setor dispon√≠vel');
            return;
        }
        
        // 3. Atribuir setores aos usu√°rios que n√£o t√™m
        console.log('\n3Ô∏è‚É£ Atribuindo setores...');
        let assignedCount = 0;
        
        for (const user of users) {
            if (user.setores.length === 0) {
                // Atribuir o primeiro setor dispon√≠vel
                const setorToAssign = setores[0];
                await user.addSetores(setorToAssign);
                
                console.log(`   ‚úÖ Setor "${setorToAssign.nome}" atribu√≠do ao usu√°rio "${user.username}"`);
                assignedCount++;
            } else {
                console.log(`   ‚ÑπÔ∏è  Usu√°rio "${user.username}" j√° tem setores: ${user.setores.map(s => s.nome).join(', ')}`);
            }
        }
        
        // 4. Verificar resultado
        console.log('\n4Ô∏è‚É£ Verificando resultado...');
        const updatedUsers = await User.findAll({
            include: [{
                model: Setor,
                as: 'setores',
                attributes: ['id', 'nome'],
                through: { attributes: [] }
            }]
        });
        
        console.log('   üìã Status final dos usu√°rios:');
        updatedUsers.forEach(user => {
            const setoresList = user.setores.length > 0 
                ? user.setores.map(s => s.nome).join(', ')
                : 'Sem setores';
            console.log(`      - ${user.username} (${user.role}): ${setoresList}`);
        });
        
        console.log('\n‚úÖ Atribui√ß√£o de setores conclu√≠da!');
        console.log(`\nüéØ Resumo:`);
        console.log(`   - Usu√°rios processados: ${users.length}`);
        console.log(`   - Setores atribu√≠dos: ${assignedCount}`);
        console.log(`   - Usu√°rios com setores: ${updatedUsers.filter(u => u.setores.length > 0).length}`);
        
    } catch (error) {
        console.error('‚ùå Erro durante a atribui√ß√£o:', error);
        console.error('Stack trace:', error.stack);
    } finally {
        await require('../models').sequelize.close();
    }
}

// Executar se chamado diretamente
if (require.main === module) {
    assignSetoresToUsers();
}

module.exports = assignSetoresToUsers;
