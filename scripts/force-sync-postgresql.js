// Script para for√ßar a sincroniza√ß√£o das tabelas no PostgreSQL
const { sequelize } = require('../models');

async function forceSyncPostgreSQL() {
    try {
        console.log('üîÑ For√ßando sincroniza√ß√£o das tabelas no PostgreSQL...\n');
        
        // Testar conex√£o
        await sequelize.authenticate();
        console.log('‚úÖ Conex√£o com PostgreSQL estabelecida');
        
        // For√ßar sincroniza√ß√£o (recriar todas as tabelas)
        console.log('üîÑ Recriando todas as tabelas...');
        await sequelize.sync({ force: true });
        console.log('‚úÖ Tabelas criadas com sucesso!');
        
        // Verificar tabelas criadas
        const [results] = await sequelize.query(`
            SELECT table_name 
            FROM information_schema.tables 
            WHERE table_schema = 'public'
            ORDER BY table_name
        `);
        
        console.log('\nüìã Tabelas criadas:');
        results.forEach(table => {
            console.log(`   - ${table.table_name}`);
        });
        
        console.log('\nüéâ Migra√ß√£o para PostgreSQL conclu√≠da com sucesso!');
        console.log('\nüìã Pr√≥ximos passos:');
        console.log('1. Execute: node server.js');
        console.log('2. O usu√°rio admin ser√° criado automaticamente');
        console.log('3. O setor "Administra√ß√£o" ser√° criado automaticamente');
        
    } catch (error) {
        console.error('‚ùå Erro durante a migra√ß√£o:', error);
        console.log('\nüìã Poss√≠veis solu√ß√µes:');
        console.log('1. Verifique se o PostgreSQL est√° rodando');
        console.log('2. Verifique as credenciais no arquivo .env');
        console.log('3. Certifique-se de que o usu√°rio postgres tem permiss√µes');
    } finally {
        await sequelize.close();
    }
}

// Executar migra√ß√£o
forceSyncPostgreSQL();





